[{"id":"timeweaver","user_id":"505ca38b-5d27-4d19-a71d-2fb98447c9c3","name":"TimeWeaver","content":"\"\"\"\ntitle: TimeWeaver - Timezone & Date/Time Tool\nauthor: PureGrain at SLA Ops, LLC\nauthor_url: https://github.com/PureGrain\nrepo_url: https://github.com/PureGrain/my-openwebui\nfunding_url: https://github.com/open-webui\nversion: 1.1.0\nlicense: MIT\nrequired_open_webui_version: 0.3.9\ndescription: Weaves timezone rules, DST transitions, and temporal calculations into a seamless fabric of accurate date and time information for any location worldwide.\n\"\"\"\n\nfrom datetime import datetime\nfrom zoneinfo import ZoneInfo\nfrom pydantic import BaseModel, Field\nfrom typing import Optional\n\n\nclass Tools:\n    class Valves(BaseModel):\n        default_timezone: str = Field(\n            default=\"UTC\",\n            description=\"Default timezone for date/time operations (e.g., 'UTC', 'America/New_York', 'Europe/London')\",\n        )\n\n    class UserValves(BaseModel):\n        user_timezone: Optional[str] = Field(\n            default=None,\n            description=\"User-specific timezone override (e.g., 'America/Los_Angeles', 'Asia/Tokyo')\",\n        )\n\n    def __init__(self):\n        self.valves = self.Valves()\n        self.user_valves = self.UserValves()\n\n    def _get_timezone(self) -> ZoneInfo:\n        \"\"\"\n        Get the appropriate timezone, prioritizing user settings over defaults.\n        :return: ZoneInfo object for the selected timezone\n        \"\"\"\n        tz_string = self.user_valves.user_timezone or self.valves.default_timezone\n        return ZoneInfo(tz_string)\n\n    def get_current_date(self, timezone: Optional[str] = None) -> str:\n        \"\"\"\n        Get the current date in the specified timezone.\n        :param timezone: Optional timezone string (e.g., 'America/New_York'). If None, uses configured timezone.\n        :return: The current date as a string.\n        \"\"\"\n        if timezone:\n            tz = ZoneInfo(timezone)\n        else:\n            tz = self._get_timezone()\n\n        current_date = datetime.now(tz).strftime(\"%A, %B %d, %Y\")\n        tz_name = datetime.now(tz).strftime(\"%Z\")\n        return f\"Today's date is {current_date} ({tz_name})\"\n\n    def get_current_time(self, timezone: Optional[str] = None) -> str:\n        \"\"\"\n        Get the current time in the specified timezone.\n        :param timezone: Optional timezone string (e.g., 'Europe/London'). If None, uses configured timezone.\n        :return: The current time as a string.\n        \"\"\"\n        if timezone:\n            tz = ZoneInfo(timezone)\n        else:\n            tz = self._get_timezone()\n\n        now = datetime.now(tz)\n        current_time = now.strftime(\"%H:%M:%S\")\n        tz_name = now.strftime(\"%Z\")\n        offset = now.strftime(\"%z\")\n        return f\"Current Time: {current_time} {tz_name} (UTC{offset[:3]}:{offset[3:]})\"\n\n    def get_current_datetime(self, timezone: Optional[str] = None) -> str:\n        \"\"\"\n        Get both the current date and time in the specified timezone.\n        :param timezone: Optional timezone string (e.g., 'Asia/Tokyo'). If None, uses configured timezone.\n        :return: The current date and time as a string.\n        \"\"\"\n        if timezone:\n            tz = ZoneInfo(timezone)\n        else:\n            tz = self._get_timezone()\n\n        now = datetime.now(tz)\n        current_datetime = now.strftime(\"%A, %B %d, %Y at %H:%M:%S\")\n        tz_name = now.strftime(\"%Z\")\n        offset = now.strftime(\"%z\")\n        return f\"{current_datetime} {tz_name} (UTC{offset[:3]}:{offset[3:]})\"\n","specs":[{"name":"_get_timezone","description":"Get the appropriate timezone, prioritizing user settings over defaults.","parameters":{"properties":{},"type":"object"}},{"name":"get_current_date","description":"Get the current date in the specified timezone.","parameters":{"properties":{"timezone":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"Optional timezone string (e.g., 'America/New_York'). If None, uses configured timezone."}},"type":"object"}},{"name":"get_current_datetime","description":"Get both the current date and time in the specified timezone.","parameters":{"properties":{"timezone":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"Optional timezone string (e.g., 'Asia/Tokyo'). If None, uses configured timezone."}},"type":"object"}},{"name":"get_current_time","description":"Get the current time in the specified timezone.","parameters":{"properties":{"timezone":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"Optional timezone string (e.g., 'Europe/London'). If None, uses configured timezone."}},"type":"object"}}],"meta":{"description":"Weaves timezone complexity into simplicity. Delivering accurate dates and times anywhere, with DST intelligence woven in.","manifest":{"title":"TimeWeaver - Timezone & Date/Time Tool","author":"PureGrain at SLA Ops, LLC","author_url":"https://github.com/PureGrain","repo_url":"https://github.com/PureGrain/my-openwebui","funding_url":"https://github.com/open-webui","version":"1.1.0","license":"MIT","required_open_webui_version":"0.3.9","description":"Weaves timezone rules, DST transitions, and temporal calculations into a seamless fabric of accurate date and time information for any location worldwide."}},"access_control":{},"updated_at":1760381630,"created_at":1760374895}]